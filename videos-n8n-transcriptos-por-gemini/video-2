¡Con gusto! Este es el segundo video del curso de n8n, centrado en los conceptos fundamentales de APIs y Webhooks.

A continuación, tienes la transcripción detallada y traducida de los puntos clave del video para que continúes tu camino a experto en n8n:

n8n Curso para Principiantes (2/9) - Introducción a APIs y Webhooks
Este video cubre qué es una API, sus componentes principales, y qué son los Webhooks (a veces llamados APIs inversas) [00:08].

1. ¿Qué es una API? [00:33]
Definición Técnica: Una API (Interfaz de Programación de Aplicaciones o Application Programming Interface) expone un servicio. Los desarrolladores escriben programas para consumir ese servicio [01:31].

Ejemplo: Google Sheets tiene una API que expone servicios como "obtener todos los datos de una hoja" o "actualizar filas". n8n consume estos servicios.

Analogía del Restaurante: Es la manera más fácil de entenderlo [00:41].

Tú (el Cliente): Eres quien solicita el servicio.

El Mesero (la Interfaz/API): Es el intermediario que toma tu pedido (la Solicitud o Request) y lo lleva a la cocina.

La Cocina (la Aplicación/Servidor): Es la aplicación (ej. Google Sheets) que procesa la solicitud.

El Plato de Comida (la Respuesta o Response): Es la información que el mesero te trae de vuelta.

Propósito: La API abstrae la complejidad [02:53]. Te permite acceder a datos y funcionalidades de una aplicación sin tener que interactuar directamente con el servidor.

2. Componentes de una Solicitud (Request) HTTP [04:44]
La mayoría de las peticiones que usarás son peticiones HTTP. El nodo HTTP Request de n8n te permite construir estas peticiones. Una solicitud tiene cuatro componentes principales:

URL [05:35]

Es la ubicación única de un recurso en la web (una página, imagen, PDF o datos).

Componentes Obligatorios: Esquema (ej. http o https), Host y Ruta (Path).

Componentes Opcionales: Puerto y Parámetros de Consulta (Query Parameters).

Los parámetros de consulta siempre van precedidos por un signo de interrogación (?) [06:05].

Método (Method) [06:15]

Describe la acción que deseas realizar en la URL. Siempre son verbos.

GET: Se usa principalmente para recibir información (leer datos) [06:23].

POST: Se usa para enviar información (crear datos, como el envío de un formulario) [06:39].

Otros: DELETE, PUT, PATCH (menos comunes).

Encabezado (Header) [07:26]

Proporciona contexto o detalles adicionales sobre la solicitud, como tu ubicación, idioma preferido o tipo de dispositivo.

Ejemplo: Accept: application/json le dice al servidor que esperas la respuesta en formato JSON [08:00].

Cuerpo (Body) [08:22]

Es opcional y solo existe para solicitudes que envían datos (POST, PUT, PATCH).

Contiene la información que deseas enviar al servidor (ej. el nombre, apellido y correo de un formulario) [08:29].

Credenciales (Credentials): No son parte de la solicitud HTTP en sí, pero son vitales [08:47].

Las credenciales son la forma en que le haces saber a la aplicación que tienes permiso para realizar la solicitud (autenticación).

Formas Comunes:

A través de parámetros de consulta (?api_key=...).

A través del encabezado (Authorization: Bearer ...).

Mediante OAuth (la forma más común, como cuando haces Sign in with Google) [10:03].

3. Componentes de la Respuesta (Response) HTTP [10:28]
La aplicación (el servidor) responderá a tu solicitud con tres componentes:

Código de Estado (Status Code) [10:37]

Un número de tres dígitos que indica si la solicitud fue exitosa o fallida.

2xx (Éxito):

200 (OK): La solicitud fue exitosa.

4xx (Error del Cliente/Tu Error):

401 (Unauthorized): Error de autenticación. Debes revisar tus credenciales [11:07].

404 (Not Found): Problema con la URL. El recurso no existe en esa ubicación [11:36].

5xx (Error del Servidor):

500 (Internal Server Error): Error en el servidor. Generalmente, solo debes intentar de nuevo más tarde [11:53].

Encabezado (Header) [12:34]

Da contexto adicional sobre la respuesta (ej. cuánto contenido hay, qué tipo de contenido es o cuándo caduca) [12:44].

Cuerpo (Body) [13:06]

Son los datos reales que se devuelven (ej. la información de la fila de Google Sheets que pediste). Puede estar en formatos como HTML o JSON.

4. Webhooks o APIs Inversas [13:23]
Analogía del Timbre (Doorbell): En lugar de que estés preguntando constantemente si algo sucedió (Polling) [14:03], el Webhook es un "timbre" que te avisa sincrónicamente cuando ocurre un evento [13:39].

Definición: Un Webhook es un mecanismo que permite que una aplicación (ej. Stripe) te envíe información automáticamente a una URL específica cuando ocurre un evento predefinido (ej. se realiza un nuevo pago).

En n8n: Para usar un Webhook, necesitas la URL a la que se enviará la información, y luego puedes usar el nodo Webhook de n8n para recibirla y activar tu workflow [14:51].

El próximo video de la serie cubrirá los nodos de n8n y todo lo que necesitas para comenzar a construir tus primeros workflows [15:21].

n8n Beginner Course (2/9) - Introduction to APIs and Webhooks
n8n · 229 mil visualizaciones

¬°Absolutamente! Este sexto video es donde se muestran los **nodos de utilidad** esenciales para manipular y transformar datos, llevando el *workflow* de ejemplo a un nivel pr√°ctico.

Aqu√≠ tienes la transcripci√≥n detallada de los nodos √∫tiles y el progreso del *workflow* que te acercar√° a ser un experto en n8n:

***

## üõ†Ô∏è Nodos √ötiles en n8n para Transformaci√≥n de Datos

El video cubre tres nodos muy comunes que todo constructor de *workflows* profesional utiliza para limpiar, reformatear y estructurar la informaci√≥n.

### 1. Nodo Edit Fields (Set) [[00:41](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=41)]
Este es uno de los nodos m√°s √∫tiles y vers√°tiles.

* **Prop√≥sito:** Gestionar y modificar los datos dentro de tus *Items* (filas). Se utiliza para:
    * **Limpiar datos:** Eliminar campos innecesarios para que los *Items* sean m√°s ligeros y f√°ciles de manejar [[04:10](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=250)].
    * **A√±adir o Formatear datos:** Crear nuevos campos o modificar los existentes usando **Expresiones** (ej. concatenar nombre y apellido, o poner el apellido en may√∫sculas) [[04:49](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=289)].
* **Configuraci√≥n clave:** Puedes elegir si deseas **conservar todos los campos de entrada** o si solo deseas **incluir los campos que est√°s definiendo** en el nodo (*"No input fields"*), lo cual es ideal para limpiar el *Item* por completo [[04:33](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=273)].

### 2. Nodo Aggregate (Agregaci√≥n) [[01:34](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=94)]
Este nodo pertenece a la categor√≠a de funciones que manejan **m√∫ltiples *Items***.

* **Prop√≥sito:** Toma m√∫ltiples *Items* de entrada y los **combina en un solo *Item*** de salida. Es √∫til cuando necesitas resumir datos de muchos registros.
* **Uso:** Permite agregar datos de campos espec√≠ficos (ej. tomar el campo `email` de 10 *Items* y crear una lista con los 10 correos electr√≥nicos dentro de un nuevo *Item* √∫nico) [[02:03](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=123)].
* **Nodos Similares:** Existen nodos similares para remover duplicados, limitar el n√∫mero de *Items* o, a la inversa, desglosar una clave en m√∫ltiples *Items* [[02:20](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=140)].

### 3. Nodo Webhook (Trigger) [[02:42](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=162)]
Ya se hab√≠a introducido, pero aqu√≠ se explica su funcionamiento pr√°ctico:

* **Prop√≥sito:** Activar un *workflow* cuando recibe una **petici√≥n HTTP (un *Webhook*)** en una URL espec√≠fica.
* **URLs:** El nodo proporciona una **URL de Prueba (*Test URL*)** y una **URL de Producci√≥n (*Production URL*)**.
* **Flujo:** Cuando un servicio externo (como Stripe o un formulario) env√≠a datos a esa URL, el *workflow* se ejecuta de forma inmediata (*s√≠ncronamente*), y los datos recibidos pasan a ser el primer *Item* de entrada del *workflow* [[03:00](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=180)].
* **Buena Pr√°ctica:** Puedes **fijar el *Item* de datos** (**Pin Data**) que recibiste durante la prueba para seguir construyendo el *workflow* con ese ejemplo, incluso si recargas la p√°gina [[12:27](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=747)].

---

## üèóÔ∏è Construcci√≥n del Workflow de Ejemplo

El video contin√∫a el *workflow* de ejemplo (leer datos de Google Sheets, filtrar *Items* con email) y a√±ade l√≥gica avanzada.

### A. Limpieza de Datos (Nodo Edit Fields) [[03:53](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=233)]

1.  Se inserta el nodo **Edit Fields** (Set) inmediatamente despu√©s del nodo `Filter` que conserv√≥ solo los contactos con email.
2.  Se configura para **no incluir campos de entrada** (*No input fields*) para limpiar los *Items*.
3.  Se a√±aden y formatean los campos necesarios usando expresiones:
    * `full_name`: Concatenaci√≥n de **Nombre** y **Apellido** (el apellido se pone en **MAY√öSCULAS** con el m√©todo `.toUpperCase()` de JavaScript) [[04:49](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=289)].
    * `email`: Se mapea el email.
    * `company`: Se mapea la compa√±√≠a.
    * ***Resultado:*** El *Item* resultante es mucho m√°s limpio y solo contiene la informaci√≥n relevante (nombre completo, email, compa√±√≠a) [[05:30](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=330)].

### B. Opciones de Notificaci√≥n (Slack)

El *workflow* llega al nodo `IF` que separa los emails personales (Gmail/Hotmail) de los profesionales. Se muestra c√≥mo usar el nodo `Slack` en la rama "Profesional" con dos enfoques:

#### Opci√≥n 1: Mensaje √önico Agregado (Aggregate) [[06:28](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=388)]
* Se inserta un nodo **Aggregate** despu√©s del `IF`.
* El nodo `Aggregate` combina los correos electr√≥nicos y compa√±√≠as de **todos los *Items*** en un solo *Item*.
* El nodo `Slack` env√≠a **un solo mensaje** a un usuario con la lista consolidada de todos los correos y compa√±√≠as [[07:41](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=461)].
    * **Ventaja:** Ideal para manejar grandes vol√∫menes de datos (cientos o miles) sin saturar al usuario con notificaciones individuales [[10:46](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=646)].

#### Opci√≥n 2: Mensajes Individuales [[09:31](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=571)]
* Se elimina el nodo `Aggregate`.
* El nodo `Slack` se conecta directamente y se configura con una **expresi√≥n din√°mica** (ej. `"Nuevo registro de: " + {{ $json.email }} + " de la compa√±√≠a: " + {{ $json.company }}` ).
* **Resultado:** Como el nodo `Slack` se ejecuta **una vez por cada *Item*** de entrada, se env√≠an m√∫ltiples mensajes (uno por cada registro profesional).

### C. Ejemplo de Workflow con Webhook (L√≥gica de Eventos) [[11:05](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=665)]

Finalmente, el video muestra un *workflow* reactivo que usa un `Webhook Trigger` para manejar diferentes eventos:

1.  **Inicio con Webhook:** Se a√±ade un `Webhook Trigger` para recibir datos con el `m√©todo POST`.
2.  **Ramificaci√≥n Condicional de Eventos:** Se usa un nodo `IF` para comprobar el valor de una clave de entrada (`event`).
    * **Evento 1:** Si el `event` es igual a `"invited_team_member"`, se activa un camino que env√≠a una notificaci√≥n espec√≠fica a Slack [[12:53](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=773)].
    * **Evento 2:** Si el `event` es igual a `"account_created"`, se activa otro camino que env√≠a una notificaci√≥n diferente a Slack [[14:22](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=862)].

Este dise√±o de *workflow* basado en *Webhooks* e *IFs* es la forma est√°ndar de manejar notificaciones y eventos as√≠ncronos en sistemas automatizados.

***

El pr√≥ximo video de la serie cubrir√° la **gesti√≥n de errores** y c√≥mo n8n almacena las ejecuciones pasadas de tus *workflows* [[16:09](http://www.youtube.com/watch?v=Rmi-ckbMOQE&t=969)].
http://googleusercontent.com/youtube_content/10
